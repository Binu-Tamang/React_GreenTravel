{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\JobAxle_Task-component_branch\\\\JobAxle_Task-component_branch\\\\my-react-component\\\\src\\\\components\\\\progress-bar\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = () => {\n  _s();\n  const [progress, setProgress] = useState(24); // Initial progress value\n\n  // Circle properties for SVG\n  const radius = 30; // Radius of the circle (to match the circle's 'r' value)\n  const circumference = 2 * Math.PI * radius; // Circumference of the circle\n  const strokeDashoffset = circumference - progress / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress-bar--container\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"circular-svg\",\n        viewBox: \"0 0 100 100\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          stroke: \"#EAEAEA\",\n          strokeWidth: \"5.5\",\n          cx: \"50\",\n          cy: \"50\",\n          r: \"30\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          id: \"progress--circle\",\n          stroke: \"#28411B\",\n          strokeWidth: \"5.5\",\n          cx: \"50\",\n          cy: \"50\",\n          r: \"30\",\n          fill: \"none\",\n          strokeDasharray: circumference,\n          strokeDashoffset: strokeDashoffset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          id: \"progress--text\",\n          x: \"50\",\n          y: \"48\",\n          textAnchor: \"middle\",\n          dominantBaseline: \"middle\",\n          className: \"text-sm font-bold\",\n          style: {\n            fontSize: '10px'\n          },\n          children: [progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          id: \"progress--text\",\n          className: \"progress--text--second text-sm\",\n          x: \"50\",\n          y: \"58\",\n          textAnchor: \"middle\",\n          dominantBaseline: \"middle\",\n          style: {\n            fontSize: '10px'\n          },\n          children: \"collected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this) // End of wrapper div\n  ;\n};\n_s(ProgressBar, \"D7uzCd47U/NYTxXismGCltDCJbo=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProgressBar","_s","progress","setProgress","radius","circumference","Math","PI","strokeDashoffset","children","id","className","viewBox","stroke","strokeWidth","cx","cy","r","fill","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","x","y","textAnchor","dominantBaseline","style","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/JobAxle_Task-component_branch/JobAxle_Task-component_branch/my-react-component/src/components/progress-bar/ProgressBar.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(24); // Initial progress value\n\n  // Circle properties for SVG\n  const radius = 30; // Radius of the circle (to match the circle's 'r' value)\n  const circumference = 2 * Math.PI * radius; // Circumference of the circle\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\n\n  return (\n    <div>\n      {\" \"}\n      {/* Wrapper div to ensure only one root element */}\n      <div id=\"progress-bar--container\">\n        <svg className=\"circular-svg\" viewBox=\"0 0 100 100\">\n          <circle\n            stroke=\"#EAEAEA\"\n            strokeWidth=\"5.5\"\n            cx=\"50\"\n            cy=\"50\"\n            r=\"30\"\n            fill=\"none\"\n          />\n          <circle\n            id=\"progress--circle\"\n            stroke=\"#28411B\"\n            strokeWidth=\"5.5\"\n            cx=\"50\"\n            cy=\"50\"\n            r=\"30\"\n            fill=\"none\"\n            strokeDasharray={circumference}\n            strokeDashoffset={strokeDashoffset}\n          />\n          <text\n            id=\"progress--text\"\n            x=\"50\"\n            y=\"48\"\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n            className=\"text-sm font-bold\" \n            style={{ fontSize: '10px' }} \n          >\n            {progress}%\n          </text>\n          <text\n            id=\"progress--text\"\n            className=\"progress--text--second text-sm\" \n            x=\"50\"\n            y=\"58\"\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n            style={{ fontSize: '10px' }} \n          >\n            collected\n          </text>\n        </svg>\n      </div>\n    </div> // End of wrapper div\n  );\n};\n\nexport default ProgressBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMO,MAAM,GAAG,EAAE,CAAC,CAAC;EACnB,MAAMC,aAAa,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,MAAM,CAAC,CAAC;EAC5C,MAAMI,gBAAgB,GAAGH,aAAa,GAAIH,QAAQ,GAAG,GAAG,GAAIG,aAAa;EAEzE,oBACEN,OAAA;IAAAU,QAAA,GACG,GAAG,eAEJV,OAAA;MAAKW,EAAE,EAAC,yBAAyB;MAAAD,QAAA,eAC/BV,OAAA;QAAKY,SAAS,EAAC,cAAc;QAACC,OAAO,EAAC,aAAa;QAAAH,QAAA,gBACjDV,OAAA;UACEc,MAAM,EAAC,SAAS;UAChBC,WAAW,EAAC,KAAK;UACjBC,EAAE,EAAC,IAAI;UACPC,EAAE,EAAC,IAAI;UACPC,CAAC,EAAC,IAAI;UACNC,IAAI,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACFvB,OAAA;UACEW,EAAE,EAAC,kBAAkB;UACrBG,MAAM,EAAC,SAAS;UAChBC,WAAW,EAAC,KAAK;UACjBC,EAAE,EAAC,IAAI;UACPC,EAAE,EAAC,IAAI;UACPC,CAAC,EAAC,IAAI;UACNC,IAAI,EAAC,MAAM;UACXK,eAAe,EAAElB,aAAc;UAC/BG,gBAAgB,EAAEA;QAAiB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACFvB,OAAA;UACEW,EAAE,EAAC,gBAAgB;UACnBc,CAAC,EAAC,IAAI;UACNC,CAAC,EAAC,IAAI;UACNC,UAAU,EAAC,QAAQ;UACnBC,gBAAgB,EAAC,QAAQ;UACzBhB,SAAS,EAAC,mBAAmB;UAC7BiB,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAApB,QAAA,GAE3BP,QAAQ,EAAC,GACZ;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPvB,OAAA;UACEW,EAAE,EAAC,gBAAgB;UACnBC,SAAS,EAAC,gCAAgC;UAC1Ca,CAAC,EAAC,IAAI;UACNC,CAAC,EAAC,IAAI;UACNC,UAAU,EAAC,QAAQ;UACnBC,gBAAgB,EAAC,QAAQ;UACzBC,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAApB,QAAA,EAC7B;QAED;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,CAAC;EAAA;AAEX,CAAC;AAACrB,EAAA,CA3DID,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA6DjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}